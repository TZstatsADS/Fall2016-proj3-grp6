{
    "collab_server" : "",
    "contents" : "#############################################\n### Main execution script for experiments ###\n#############################################\n\n### Author: Yuting Ma\n### Project 3\n### ADS Spring 2016\n\n### Specify directories\nsetwd(dirname(rstudioapi::getActiveDocumentContext()$path))\n\nimg_train_dir <- \"./data/images/\"\n#img_test_dir <- \"./data/zipcode_test/\"\n\n### Import training images class labels ----\n#label_train <- read.table(\"./data/zip_train_label.txt\", header=F)\n#label_train <- as.numeric(unlist(label_train) == \"9\")\nnum_chicken <- 1000\nnum_dog <- 1000\nlabel_train <- c(rep(0, num_chicken), rep(1, num_dog))\n\n\n### Construct visual feature ----\nsource(\"./lib/feature.R\")\ntm_feature_train_RGB <- system.time(dat_train_RGB <- feature_RGB(\"./data/images/\", \"RGB\"))\ntm_feature_train <- system.time(dat_train <- feature_base(\"sift_features.csv\"))\n\nsave(dat_train, file=\"./output/feature_train.RData\")\n\n### Train a classification model with training images\nsource(\"./lib/train.R\")\nsource(\"./lib/test.R\")\n\n\n### Model selection with cross-validation ----\n# Choosing between different values of interaction depth for GBM\nsource(\"./lib/cross_validation.R\")\n#depth_values <- seq(3, 11, 2)\ndepth_values <- c(1)\n\nerr_cv <- array(dim=c(length(depth_values), 2))\nK <- 5  # number of CV folds\nfor(k in 1:length(depth_values)){\n  cat(\"k=\", k, \"\\n\")\n  err_cv[k,] <- cv.function(dat_train, label_train, depth_values[k], K)\n}\nsave(err_cv, file=\"./output/err_cv.RData\")\n\n# Visualize CV results\njpeg(file = \"./figs/cv_results.jpg\")\nplot(depth_values, err_cv[,1], xlab=\"Interaction Depth\", ylab=\"CV Error\",\n     main=\"Cross Validation Error\", type=\"n\", ylim=c(0, 0.5))\npoints(depth_values, err_cv[,1], col=\"blue\", pch=16)\nlines(depth_values, err_cv[,1], col=\"blue\")\narrows(depth_values, err_cv[,1]-err_cv[,2],depth_values, err_cv[,1]+err_cv[,2], \n      length=0.1, angle=90, code=3)\ndev.off()\n\n\n# Choose the best parameter value\ndepth_best <- depth_values[which.min(err_cv[,1])]\npar_best <- list(depth=depth_best)\n\n# train the model with the entire training set\ntm_train <- system.time(fit_train <- train(dat_train, label_train, par_best))\n#save(fit_train, file=\"./output/fit_train.RData\")\n\n### Make prediction \n#tm_test <- system.time(pred_test <- test(fit_train, dat_test))\n#save(pred_test, file=\"./output/pred_test.RData\")\n\n### Summarize Running Time\ncat(\"Time for constructing training features=\", tm_feature_train[1], \"s \\n\")\n#cat(\"Time for constructing testing features=\", tm_feature_test[1], \"s \\n\")\ncat(\"Time for training model=\", tm_train[1], \"s \\n\")\n#cat(\"Time for making prediction=\", tm_test[1], \"s \\n\")\n\n",
    "created" : 1477854060973.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3066280290",
    "id" : "6F4A462D",
    "lastKnownWriteTime" : 1477855374,
    "last_content_update" : 1477855374561,
    "path" : "C:/Users/jgaci/Google Drive/2016_Fall/Applied_Data_Science/Project03/Fall2016-proj3-grp6/main_base.R",
    "project_path" : "main_base.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}