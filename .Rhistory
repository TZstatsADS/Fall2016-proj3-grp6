library(plotly)
```
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
knitr::opts_chunk$set(echo = TRUE)
experiment.data.tree <- read_csv("../data/exp_data_final.csv")
vignette("column-types")
experiment.data.tree <- read_csv("../data/exp_data_final.csv",
col_types = cols(
LOCATION = col_character()
)
)
View(experiment.data.tree)
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == 2009,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY")])
View(experiment.data.tree.year.uniques)
experiment.data.tree <- read_csv("../data/exp_data_final.csv",
col_types = cols(
LOCATION = col_character()
))
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == 2009,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY")])
plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, type = "histogram")
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == 2009,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY")])
plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, type = "histogram")
experiment.data.tree <- read_csv("../data/exp_data_final.csv",
col_types = cols(
YEAR = col_factor()
LOCATION = col_character()
experiment.data.tree <- read_csv("../data/exp_data_final.csv",
col_types = cols(
YEAR = col_factor(),
LOCATION = col_character()
))
experiment.data.tree <- read_csv("../data/exp_data_final.csv",
col_types = cols(
LOCATION = col_character()
))
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == 2009,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY")])
plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, type = "histogram")
plot.tree.evolution.histogram <- function(starting.year){
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == starting.year,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY")])
p <- plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, type = "histogram")
x.axis <- list(title = "Year")
y.axis <- list(title = "Count of Varieties")
p %>% layout(title = paste("Count of Varieties per year. Starting year:",starting.year),
xaxis = x.axis, yaxis = y.axis)
}
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram <- function(starting.year){
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == starting.year,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY")])
total.varieties <- nrow(experiment.data.tree.year.uniques[experiment.data.tree.year.uniques$YEAR == starting.year,])
p <- plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, type = "histogram")
x.axis <- list(title = "Year")
y.axis <- list(title = "Count of Varieties")
p %>% layout(title = paste("Count of Varieties per year. \n Starting year:",starting.year,
"Total Varieties:", total.varieties),
xaxis = x.axis, yaxis = y.axis)
}
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram <- function(starting.year){
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == starting.year,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY")])
total.varieties <- nrow(experiment.data.tree.year.uniques[experiment.data.tree.year.uniques$YEAR == starting.year,])
p <- plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, type = "histogram")
x.axis <- list(title = "Year")
y.axis <- list(title = "Count of Varieties")
p %>% layout(title = paste("Count of Varieties per year. <br> Starting year:",starting.year,
"Total Varieties:", total.varieties),
xaxis = x.axis, yaxis = y.axis)
}
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram <- function(starting.year){
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == starting.year,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY")])
total.varieties <- nrow(experiment.data.tree.year.uniques[experiment.data.tree.year.uniques$YEAR == starting.year,])
p <- plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, type = "histogram")
x.axis <- list(title = "Year")
y.axis <- list(title = "Count of Varieties")
p %>% layout(title = paste.0("Count of Varieties per year. <br> Starting year: ",starting.year,
". Total Varieties: ", total.varieties),
xaxis = x.axis, yaxis = y.axis)
}
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram <- function(starting.year){
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == starting.year,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY")])
total.varieties <- nrow(experiment.data.tree.year.uniques[experiment.data.tree.year.uniques$YEAR == starting.year,])
p <- plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, type = "histogram")
x.axis <- list(title = "Year")
y.axis <- list(title = "Count of Varieties")
p %>% layout(title = paste0("Count of Varieties per year. <br> Starting year: ",starting.year,
". Total Varieties: ", total.varieties),
xaxis = x.axis, yaxis = y.axis)
}
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram(2010)
years <- seq(2009, 2014)
years <- seq(2009, 2014)
for(year in years){
plot.tree.evolution.histogram(year)
}
plot.tree.evolution.histogram <- function(starting.year){
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == starting.year,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY")])
total.varieties <- nrow(experiment.data.tree.year.uniques[experiment.data.tree.year.uniques$YEAR == starting.year,])
p <- plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, type = "histogram")
x.axis <- list(title = "Year")
y.axis <- list(title = "Count of Varieties")
p %>% layout(title = paste0("Count of Varieties per year. <br> Starting year: ",starting.year,
". Total Varieties: ", total.varieties),
xaxis = x.axis, yaxis = y.axis)
}
years <- seq(2009, 2014)
for(year in years){
plot.tree.evolution.histogram(year)
}
plot.tree.evolution.histogram(years[1])
years <- seq(2009, 2014)
for(year in years){
print(year)
plot.tree.evolution.histogram(year)
}
plot.tree.evolution.histogram <- function(starting.year){
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == starting.year,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY")])
total.varieties <- nrow(experiment.data.tree.year.uniques[experiment.data.tree.year.uniques$YEAR == starting.year,])
p <- plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, type = "histogram")
x.axis <- list(title = "Year")
y.axis <- list(title = "Count of Varieties")
p %>% layout(title = paste0("Count of Varieties per year. <br> Starting year: ",starting.year,
". Total Varieties: ", total.varieties),
xaxis = x.axis, yaxis = y.axis)
p
}
years <- seq(2009, 2014)
for(year in years){
print(year)
plot.tree.evolution.histogram(year)
}
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram(2010)
plot.tree.evolution.histogram(2011)
plot.tree.evolution.histogram(2012)
plot.tree.evolution.histogram(2013)
plot.tree.evolution.histogram(2014)
plot.tree.evolution.histogram <- function(starting.year){
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == starting.year,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY")])
total.varieties <- nrow(experiment.data.tree.year.uniques[experiment.data.tree.year.uniques$YEAR == starting.year,])
p <- plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, type = "histogram")
x.axis <- list(title = "Year")
y.axis <- list(title = "Count of Varieties")
p %>% layout(title = paste0("Count of Varieties per year. <br> Starting year: ",starting.year,
". Total Varieties: ", total.varieties),
xaxis = x.axis, yaxis = y.axis)
}
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram(2010)
plot.tree.evolution.histogram(2011)
plot.tree.evolution.histogram(2012)
plot.tree.evolution.histogram(2013)
plot.tree.evolution.histogram(2014)
```{r, include=FALSE, fig.align='center'}
plot.tree.evolution.histogram <- function(starting.year){
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == starting.year,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY")])
total.varieties <- nrow(experiment.data.tree.year.uniques[experiment.data.tree.year.uniques$YEAR == starting.year,])
p <- plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, type = "histogram")
x.axis <- list(title = "Year")
y.axis <- list(title = "Count of Varieties")
p %>% layout(title = paste0("Count of Varieties per year. <br> Starting year: ",starting.year,
". Total Varieties: ", total.varieties),
xaxis = x.axis, yaxis = y.axis)
}
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram(2010)
plot.tree.evolution.histogram(2011)
plot.tree.evolution.histogram(2012)
plot.tree.evolution.histogram(2013)
plot.tree.evolution.histogram(2014)
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram(2010)
plot.tree.evolution.histogram(2011)
plot.tree.evolution.histogram(2012)
plot.tree.evolution.histogram(2013)
plot.tree.evolution.histogram(2014)
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram(2010)
plot.tree.evolution.histogram(2011)
plot.tree.evolution.histogram(2012)
plot.tree.evolution.histogram(2013)
plot.tree.evolution.histogram(2014)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(DT)
library(readr)
library(plotly)
experiment.data.tree <- read_csv("../data/exp_data_final.csv",
col_types = cols(
LOCATION = col_character()
))
plot.tree.evolution.histogram <- function(starting.year){
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == starting.year,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY")])
total.varieties <- nrow(experiment.data.tree.year.uniques[experiment.data.tree.year.uniques$YEAR == starting.year,])
p <- plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, type = "histogram")
x.axis <- list(title = "Year")
y.axis <- list(title = "Count of Varieties")
p %>% layout(title = paste0("Count of Unique Varieties Tested per year. <br> Starting year: ",starting.year,
". Total Varieties: ", total.varieties),
xaxis = x.axis, yaxis = y.axis)
}
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram(2010)
plot.tree.evolution.histogram(2011)
plot.tree.evolution.histogram(2012)
plot.tree.evolution.histogram(2013)
plot.tree.evolution.histogram(2014)
plot.tree.evolution.histogram <- function(starting.year){
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == starting.year,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY", "QUALIFIED")])
total.varieties <- nrow(experiment.data.tree.year.uniques[experiment.data.tree.year.uniques$YEAR == starting.year,])
p <- plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, color = QUALIFIED, type = "histogram")
x.axis <- list(title = "Year")
y.axis <- list(title = "Count of Varieties")
p %>% layout(title = paste0("Count of Unique Varieties Tested per year. <br> Starting year: ",starting.year,
". Total Varieties: ", total.varieties),
xaxis = x.axis, yaxis = y.axis)
}
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram <- function(starting.year){
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == starting.year,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY", "QUALIFIED")])
total.varieties <- nrow(experiment.data.tree.year.uniques[experiment.data.tree.year.uniques$YEAR == starting.year,])
p <- plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, color = QUALIFIED, type = "histogram")
x.axis <- list(title = "Year")
y.axis <- list(title = "Count of Varieties")
p %>% layout(title = paste0("Count of Unique Varieties Tested per year. <br> Starting year: ",starting.year,
". Total Varieties: ", total.varieties),
xaxis = x.axis,
yaxis = y.axis,
barmode = "stack")
}
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram(2010)
plot.tree.evolution.histogram(2011)
plot.tree.evolution.histogram(2012)
plot.tree.evolution.histogram(2013)
plot.tree.evolution.histogram(2014)
pts_chunk$set(out.width='750px', dpi=200)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
knitr::opts_chunk$set(echo = TRUE)
pts_chunk$set(out.width='750px', dpi=200)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(out.width='750px', dpi=200)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(out.width='750px', dpi=200)
library(dplyr)
library(DT)
library(readr)
library(plotly)
experiment.data.tree <- read_csv("../data/exp_data_final.csv",
col_types = cols(
LOCATION = col_character()
))
plot.tree.evolution.histogram <- function(starting.year){
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == starting.year,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY", "QUALIFIED")])
total.varieties <- nrow(experiment.data.tree.year.uniques[experiment.data.tree.year.uniques$YEAR == starting.year,])
p <- plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, color = QUALIFIED, type = "histogram")
x.axis <- list(title = "Year")
y.axis <- list(title = "Count of Varieties")
p %>% layout(title = paste0("Count of Unique Varieties Tested per year. <br> Starting year: ",starting.year,
". Total Varieties: ", total.varieties),
xaxis = x.axis,
yaxis = y.axis,
barmode = "stack")
}
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram(2010)
plot.tree.evolution.histogram(2011)
plot.tree.evolution.histogram(2012)
plot.tree.evolution.histogram(2013)
plot.tree.evolution.histogram(2014)
plot.tree.evolution.histogram <- function(starting.year){
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == starting.year,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY", "QUALIFIED")])
total.varieties <- nrow(experiment.data.tree.year.uniques[experiment.data.tree.year.uniques$YEAR == starting.year,])
datatable(experiment.data.tree.year.uniques)
p <- plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, color = QUALIFIED, type = "histogram")
x.axis <- list(title = "Year")
y.axis <- list(title = "Count of Varieties")
p %>% layout(title = paste0("Count of Unique Varieties Tested per year. <br> Starting year: ",starting.year,
". Total Varieties: ", total.varieties),
xaxis = x.axis,
yaxis = y.axis,
barmode = "stack")
}
plot.tree.evolution.histogram <- function(starting.year){
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == starting.year,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY", "QUALIFIED")])
total.varieties <- nrow(experiment.data.tree.year.uniques[experiment.data.tree.year.uniques$YEAR == starting.year,])
p <- plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, color = QUALIFIED, type = "histogram")
x.axis <- list(title = "Year")
y.axis <- list(title = "Count of Varieties")
p %>% layout(title = paste0("Count of Unique Varieties Tested per year. <br> Starting year: ",starting.year,
". Total Varieties: ", total.varieties),
xaxis = x.axis,
yaxis = y.axis,
barmode = "stack")
datatable(experiment.data.tree.year.uniques)
}
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram(2010)
plot.tree.evolution.histogram(2011)
plot.tree.evolution.histogram(2012)
plot.tree.evolution.histogram(2013)
plot.tree.evolution.histogram(2014)
plot.tree.evolution.histogram <- function(starting.year){
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == starting.year,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY", "QUALIFIED")])
total.varieties <- nrow(experiment.data.tree.year.uniques[experiment.data.tree.year.uniques$YEAR == starting.year,])
p <- plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, color = QUALIFIED, type = "histogram")
x.axis <- list(title = "Year")
y.axis <- list(title = "Count of Varieties")
p %>% layout(title = paste0("Count of Unique Varieties Tested per year. <br> Starting year: ",starting.year,
". Total Varieties: ", total.varieties),
xaxis = x.axis,
yaxis = y.axis,
barmode = "stack")
p
datatable(experiment.data.tree.year.uniques)
}
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram(2010)
plot.tree.evolution.histogram(2011)
plot.tree.evolution.histogram(2012)
plot.tree.evolution.histogram(2013)
plot.tree.evolution.histogram(2014)
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram <- function(starting.year){
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == starting.year,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY", "QUALIFIED")])
total.varieties <- nrow(experiment.data.tree.year.uniques[experiment.data.tree.year.uniques$YEAR == starting.year,])
p <- plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, color = QUALIFIED, type = "histogram")
x.axis <- list(title = "Year")
y.axis <- list(title = "Count of Varieties")
p %>% layout(title = paste0("Count of Unique Varieties Tested per year. <br> Starting year: ",starting.year,
". Total Varieties: ", total.varieties),
xaxis = x.axis,
yaxis = y.axis,
barmode = "stack")
dt <- datatable(experiment.data.tree.year.uniques)
htmltools::tagList(list(as.widget(p), as.widget(dt)))
}
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram(2010)
plot.tree.evolution.histogram(2011)
plot.tree.evolution.histogram(2012)
plot.tree.evolution.histogram(2013)
plot.tree.evolution.histogram(2014)
plot.tree.evolution.histogram <- function(starting.year){
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == starting.year,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY", "QUALIFIED")])
total.varieties <- nrow(experiment.data.tree.year.uniques[experiment.data.tree.year.uniques$YEAR == starting.year,])
p <- plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, color = QUALIFIED, type = "histogram")
x.axis <- list(title = "Year")
y.axis <- list(title = "Count of Varieties")
p <- p %>% layout(title = paste0("Count of Unique Varieties Tested per year. <br> Starting year: ",starting.year,
". Total Varieties: ", total.varieties),
xaxis = x.axis,
yaxis = y.axis,
barmode = "stack")
dt <- datatable(experiment.data.tree.year.uniques)
htmltools::tagList(list(as.widget(p), as.widget(dt)))
}
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram(2010)
plot.tree.evolution.histogram(2011)
plot.tree.evolution.histogram(2012)
plot.tree.evolution.histogram(2013)
plot.tree.evolution.histogram(2014)
plot.tree.evolution.histogram <- function(starting.year){
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == starting.year,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY", "QUALIFIED", "CHECK")])
total.varieties <- nrow(experiment.data.tree.year.uniques[experiment.data.tree.year.uniques$YEAR == starting.year,])
p <- plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, color = QUALIFIED, type = "histogram")
x.axis <- list(title = "Year")
y.axis <- list(title = "Count of Varieties")
p <- p %>% layout(title = paste0("Count of Unique Varieties Tested per year. <br> Starting year: ",starting.year,
". Total Varieties: ", total.varieties),
xaxis = x.axis,
yaxis = y.axis,
barmode = "stack")
dt <- datatable(experiment.data.tree.year.uniques)
htmltools::tagList(list(as.widget(p), as.widget(dt)))
}
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram(2010)
plot.tree.evolution.histogram(2011)
plot.tree.evolution.histogram(2012)
plot.tree.evolution.histogram(2013)
plot.tree.evolution.histogram(2014)
View(experiment.data.tree)
data.uniques.start.stage <-  unique(experiment.data.tree.year[c("STARTING_YEAR", "STAGE", "VARIETY", "CHECK")])
View(data.uniques.start.stage)
data.uniques.start.stage <-  unique(experiment.data.tree[c("STARTING_YEAR", "STAGE", "VARIETY", "CHECK")])
View(data.uniques.start.stage)
uniques.count <- group_by(experiment.data.tree, STARTING_YEAR, STAGE, VARIETY)
uniques.count <- summarise(uniques.count, count.varieties = n_distinct(VARIETY))
uniques.count <- group_by(experiment.data.tree, STARTING_YEAR, STAGE)
uniques.count <- summarise(uniques.count, count.varieties = n_distinct(VARIETY))
table(uniques.count)
View(uniques.count)
library(reshape2)
View(uniques.count)
uniques.count.transpose <- dcast(uniques.count, STARTING_YEAR ~ STAGE, value.var = "count.varieties")
View(uniques.count.transpose)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(out.width='750px', dpi=200)
library(dplyr)
library(DT)
library(readr)
library(plotly)
library(reshape2)
experiment.data.tree <- read_csv("../data/exp_data_final.csv",
col_types = cols(
LOCATION = col_character()
))
uniques.count <- group_by(experiment.data.tree, STARTING_YEAR, STAGE)
uniques.count <- summarise(uniques.count, count.varieties = n_distinct(VARIETY))
uniques.count.transpose <- dcast(uniques.count, STARTING_YEAR ~ STAGE, value.var = "count.varieties")
datatable(uniques.count.transpose)
plot.tree.evolution.histogram <- function(starting.year){
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == starting.year,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY", "QUALIFIED", "CHECK")])
total.varieties <- nrow(experiment.data.tree.year.uniques[experiment.data.tree.year.uniques$YEAR == starting.year,])
p <- plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, color = QUALIFIED, type = "histogram")
x.axis <- list(title = "Year")
y.axis <- list(title = "Count of Varieties")
p <- p %>% layout(title = paste0("Count of Unique Varieties Tested per year. <br> Starting year: ",starting.year,
". Total Varieties: ", total.varieties),
xaxis = x.axis,
yaxis = y.axis,
barmode = "stack")
dt <- datatable(experiment.data.tree.year.uniques)
htmltools::tagList(list(as.widget(p), as.widget(dt)))
}
plot.tree.evolution.histogram(2009)
plot.tree.evolution.histogram(2010)
plot.tree.evolution.histogram(2011)
plot.tree.evolution.histogram(2012)
plot.tree.evolution.histogram(2013)
plot.tree.evolution.histogram(2014)
total.varieties.stage.1 <- sum(uniques.count.transpose$`1`)
View(experiment.data.tree)
total.varieties.not.check <- unique(experiment.data.tree["VARIETY"])
uniques.count <- group_by(experiment.data.tree, STARTING_YEAR, STAGE)
uniques.count <- summarise(uniques.count, count.varieties = n_distinct(VARIETY))
uniques.count.transpose <- dcast(uniques.count, STARTING_YEAR ~ STAGE, value.var = "count.varieties")
total.varieties.stage.1 <- sum(uniques.count.transpose$`1`)
total.varieties.not.check <- nrow(unique(experiment.data.tree["VARIETY"]))
datatable(uniques.count.transpose)
plot.tree.evolution.histogram <- function(starting.year){
experiment.data.tree.year <- experiment.data.tree[experiment.data.tree$STARTING_YEAR == starting.year,]
experiment.data.tree.year.uniques <- unique(experiment.data.tree.year[c("YEAR", "VARIETY", "QUALIFIED", "CHECK")])
total.varieties <- nrow(experiment.data.tree.year.uniques[experiment.data.tree.year.uniques$YEAR == starting.year,])
p <- plot_ly(data=experiment.data.tree.year.uniques, x = YEAR, color = QUALIFIED, type = "histogram")
x.axis <- list(title = "Year")
y.axis <- list(title = "Count of Varieties")
p <- p %>% layout(title = paste0("Count of Unique Varieties Tested per year. <br> Starting year: ",starting.year,
". Total Varieties: ", total.varieties),
xaxis = x.axis,
yaxis = y.axis,
barmode = "stack")
dt <- datatable(experiment.data.tree.year.uniques)
htmltools::tagList(list(as.widget(p), as.widget(dt)))
}
View(experiment.data.tree)
setwd("./proj3_sample")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
img_train_dir <- "./data/zipcode_train/"
img_test_dir <- "./data/zipcode_test/"
label_train <- read.table("./data/zip_train_label.txt", header=F)
label_train <- as.numeric(unlist(label_train) == "9")
?unlins
?unlinst
?unlist
label_train <- read.table("./data/zip_train_label.txt", header=F)
View(label_train)
label_train <- as.numeric(unlist(label_train) == "9")
source("./lib/feature.R")
tm_feature_train <- system.time(dat_train <- feature(img_train_dir, "img_zip_train"))
install.packages("EBImage")
library("EBImage")
install.library("EBImage")
source("https://bioconductor.org/biocLite.R")
source("./lib/feature.R")
tm_feature_train <- system.time(dat_train <- feature(img_train_dir, "img_zip_train"))
tm_feature_test <- system.time(dat_test <- feature(img_test_dir, "img_zip_test"))
